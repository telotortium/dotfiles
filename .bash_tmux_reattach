#!/bin/bash
# Helper functions for reattaching tmux sessions

hash tmux 2>/dev/null || return 0

# If not inside a tmux session, and if no session is started, start
# a new session -- but not if we're attached to the console.
if test -z "$TMUX"; then
   case "$TERM" in
   cons*|linux*)
       ;;
   *)
       __tmux-session-with-reattach-callback DEFAULT
       ;;
   esac
fi

# We've already executed everything below if this is set
test -z "$__tmux_old_env" || return 0

##########################################################################
# Save old environment before loading new environment variables from tmux
# session every time the session is reattached.

__tmux_old_env_tmp=$(mktemp --tmpdir \
    tmux_old_env.$(tmux display -p '#S').$$.XXXXXXXX)

# Reload environment from tmux session
__tmux_show_environment_merge () {
    local line;
    while IFS= read -r line; do
        if [[ $line =~ ^- ]]; then
            local var="${line#*-}"
            unset "$var"
        else
            local var="${line%=*}"
            local value="${line#*=}"
            export "$var"="$value"
        fi
    done
}

# Display values of environment variables in current environment specified
# by `tmux show-environment`.
__tmux_show_environment_filter () {
    local line;
    while IFS= read -r line; do
        if [[ $line =~ ^- ]]; then
            # Line already orders env variable to be removed
            echo "$line"
        else
            local var="${line%=*}"
            echo "${var}=$(eval echo "\$${var}")"
        fi
    done < <(tmux show-environment)
}

tmux_reload_env () {
    __tmux_show_environment_merge < <(tmux show-environment)
}

tmux_load_old_env () {
    __tmux_show_environment_merge < "$__tmux_old_env"
}

tmux_save_old_env () {
    __tmux_show_environment_filter > "$__tmux_old_env"
}

# Use SIGPWR, which is otherwise unused, as a signal to send to shells
# on reattchment.
__tmux_on_reattach () {
    tmux_save_old_env
    tmux_reload_env
    cat 1>&2 <<EOF
tmux env reloaded - use \`tmux_load_old_env\` for previous env
EOF
}
trap __tmux_on_reattach PWR

__tmux_old_env="$__tmux_old_env_tmp"
unset __tmux_old_env_tmp
