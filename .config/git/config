[alias]
        ap = add -p
        brt = "!git for-each-ref refs/heads --color=always --sort -committerdate --format='%(HEAD)%(color:reset);%(color:yellow)%(refname:short)%(color:reset);%(contents:subject);%(color:green)(%(committerdate:relative))%(color:blue);<%(authorname)>' | column -t -s ';'"
        cp = cherry-pick
        l = log --date-order --date=iso --graph --full-history --all --pretty=format:'%x08%x09%C(red)%h %C(cyan)%ad%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08%x08 %C(bold blue)%aN%C(reset)%C(bold yellow)%d %C(reset)%s'
        lg = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%ar)%Creset' --date=relative
        imd = "!f() { \
          (( $# > 0 )) || { echo Pass at least one branch 1>&2; return 1; }; \
          for branch in \"$@\"; do \
            git imerge merge \"$branch\" && git branch -d \"$branch\"; \
          done; \
        }; f"
        imd-tmp-branches = "!f () { \
            git checkout master && git branch | \
            grep --color=auto -E '^ *(gac|dropbox)-merge-([0-9]+)(\\.[0-9]+)? *$' | \
            while read branch; do git imd \"$branch\"; done; \
        }; f"
        md = "!f() { \
          (( $# > 0 )) || { echo Pass at least one branch 1>&2; return 1; }; \
          for branch in \"$@\"; do \
            git merge \"$branch\" && git branch -d \"$branch\"; \
          done; \
        }; f"
        md-tmp-branches = "!f () { \
            git checkout master && git branch | \
            grep --color=auto -E '^ *(gac|dropbox)-merge-([0-9]+)(\\.[0-9]+)? *$' | \
            while read branch; do git md \"$branch\"; done; \
        }; f"
        news = log -p HEAD@{1}..HEAD@{0}
        newslg = log HEAD@{1}..HEAD@{0} --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%ar)%Creset' --date=relative
        recent = branch --sort=-committerdate --format='%(color:blue bold)%(align:20,left)%(refname:short)%(end) %(color:red)%(align:35,middle)%(objectname:short) %(color:white)%(committerdate:iso)%(end) %(color:normal no-bold)%(subject)'
        root = rev-parse --show-toplevel
        untracked = ls-files --others --exclude-standard
[user]
	name = Robert Irelan
	email = robert.irelan@bytedance.com
[merge]
        tool = vimdiff
[credential]
        helper = cache
[color]
        ui = true
[core]
        pager = less -R
        autocrlf = input
        untrackedCache = true
[diff]
        submodule = log
        colorMoved = default
[diff "lisp"]
      xfuncname = "^(\\(.*)$"
[diff "rstats"]
      xfuncname = "^([a-zA-z.]+ <- function.*)$"
[diff "texinfo"]
# from http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=.gitattributes;h=c3b2926c78c939d94358cc63d051a70d38cfea5d;hb=HEAD
      xfuncname = "^@node[ \t][ \t]*\\([^,][^,]*\\)"
[diff "orgmode"]
      xfuncname = "^(\\*+.*)$"
[diff "rust"] # Thanks to csabahenk
      xfuncname = "^[ \t]*(pub|)[ \t]*((fn|struct|enum|impl|trait|mod)[^;]*)$"
[diff "exif"]
      binary = true
# sudo apt-get install libimage-exiftool-perl
      textconv = exiftool
[diff "pdf"]
      textconv = pdftotext-stdout
[help]
        autocorrect = 1
[interactive]
        diffFilter = diff-highlight
[man]
        viewer = mostman
[man "mostman"]
        cmd = eval "$(TERMINFO=~/.terminfo/ infocmp mostlike >/dev/null 2>&1 && echo TERMINFO=~/.terminfo/ TERM=mostlike) man"
[color "diff"]
        whitespace = red reverse
[pager]
        diff = diff-highlight | less
        show = diff-highlight | less
        log = diff-highlight | less
[pull]
        rebase = merges
[push]
        default = simple
# Keybase doesn't support this - need to see how to fix
#        useForceIfIncludes = true
[init]
        templatedir = ~/.config/git/template
[rebase]
        autoSquash = true
[rerere]
        enabled = true
[status]
        submoduleSummary = true
[multidiff]
        tool = meld-multidiff
[rebase]
        autosquash = true
