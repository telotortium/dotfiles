# Put all custom ignore patterns above `START OF AUTOGENERATED LINES`

# START OF AUTOGENERATED LINES
#
# The lines below are generated from the files under the `Global/` subdirectory
# from the Github gitignore repository at https://github.com/github/gitignore.
# The current file contents are on standard input, and the new file contents
# are on standard output. `${REPO}` is the directory holding a clone of the
# gitignore repo.
#
#     sed -e '/^# --- GITIGNORE GLOBAL AUTOGEN ---/q' | { cat; echo; printf "\043 Github global gitignore - https://github.com/github/gitignore\n\043\n"; sed 's/^/'"$(printf '\043 ')"/ "${REPO}"/LICENSE; echo; for x in "${REPO}"/Global/*.gitignore; do printf '\043\043 '; echo "$(basename "$x")"; cat "$x"; echo; echo; done; } | sed 's/  *$//g'
#
# --- GITIGNORE GLOBAL AUTOGEN ---

# Github global gitignore - https://github.com/github/gitignore
#
# Copyright (c) 2014 GitHub, Inc.
#
# Permission is hereby granted,  free of charge,  to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to  use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

## Archives.gitignore
# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.7z
*.jar
*.rar
*.zip
*.gz
*.bzip
*.bz2
*.xz
*.lzma
*.cab

#packing-only formats
*.iso
*.tar

#package management formats
*.dmg
*.xpi
*.gem
*.egg
*.deb
*.rpm
*.msi
*.msm
*.msp


## BricxCC.gitignore
# Bricx Command Center IDE
# http://bricxcc.sourceforge.net
*.bak
*.sym


## CVS.gitignore
/CVS/*
*/CVS/*
.cvsignore
*/.cvsignore


## Cloud9.gitignore
# Cloud9 IDE - http://c9.io
.c9revisions
.c9


## DartEditor.gitignore
.project
.buildlog


## Dreamweaver.gitignore
# DW Dreamweaver added files
_notes
dwsync.xml


## Eclipse.gitignore
*.pydevproject
.metadata
.gradle
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# CDT-specific
.cproject

# PDT-specific
.buildpath

# sbteclipse plugin
.target

# TeXlipse plugin
.texlipse


## Emacs.gitignore
# -*- mode: gitignore; -*-
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive

# flymake-mode
*_flymake.*

# eshell files
/eshell/history
/eshell/lastdir

# elpa packages
/elpa/


## Ensime.gitignore
# Ensime specific
.ensime
.ensime_lucene/

## Espresso.gitignore
*.esproj


## FlexBuilder.gitignore
bin/
bin-debug/


## JetBrains.gitignore
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode

## Directory-based project format
.idea/
# if you remove the above rule, at least ignore user-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# and these sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml

## File-based project format
*.ipr
*.iws
*.iml

## Additional for IntelliJ
out/

# generated by mpeltonen/sbt-idea plugin
.idea_modules/

# generated by JIRA plugin
atlassian-ide-plugin.xml

# generated by Crashlytics plugin (for Android Studio and Intellij)
com_crashlytics_export_strings.xml


## KDevelop4.gitignore
*.kdev4
.kdev4/


## Kate.gitignore
# Swap Files #
.*.kate-swp
.swp.*


## Lazarus.gitignore
#ignore backup files
backup/

#ignore files generated by the compiler
lib/
*.compiled
*.o
*.or
*.ppu

#exclude executable output in windows
*.exe

## Linux.gitignore
*~


## Matlab.gitignore
##---------------------------------------------------
## Remove autosaves generated by the Matlab editor
## We have git for backups!
##---------------------------------------------------

# Windows default autosave extension
*.asv

# OSX / *nix default autosave extension
*.m~

# Compiled MEX binaries (all platforms)
*.mex*

# Simulink Code Generation
slprj/


## Mercurial.gitignore
/.hg/*
*/.hg/*
.hgignore


## ModelSim.gitignore
# ignore ModelSim generated files and directories (temp files and so on)
[_@]*

# ignore compilation output of ModelSim
*.mti
*.dat
*.dbs
*.psm
*.bak
*.cmp
*.jpg
*.html
*.bsf

# ignore simulation output of ModelSim
wlf*
*.wlf
*.vstf
*.ucdb
cov*/
transcript*
sc_dpiheader.h
vsim.dbg


## MonoDevelop.gitignore
#User Specific
*.userprefs
*.usertasks

#Mono Project Files
*.pidb
*.resources
test-results/


## NetBeans.gitignore
nbproject/private/
build/
nbbuild/
dist/
nbdist/
nbactions.xml
nb-configuration.xml


## NotepadPP.gitignore
# Notepad++ backups #
*.bak

## OSX.gitignore
.DS_Store
.AppleDouble
.LSOverride

# Icon must ends with two \r.
Icon

# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes


## Quartus2.gitignore
# Working with Altera Quartus II (Q2) and do proper versioning is not that easy
# but if you follow some rules it can be accomplished. :)
# This file should be placed into the main directory where the .qpf file is
# found. Generally Q2 throws all entities and so on in the main directory, but
# you can place all stuff also in separate folders. This approach is followed
# here. So when you create a new design create one or more folders where your
# entities will be located and put a .gitignore in there that overrides the
# ignores of this file, e.g. one single rule stating "!*" which allows now all
# type of files. When you add a MegaFunction or another entity to your design,
# simply add it to one of your private folders and Q2 will be happy and manage
# everything quite good. When you want to do versioning of your generated
# SOF/POF files, you can do this by redirecting the generated output to an own
# folder. To do this go to:
# "Assignments"
#   -> "Settings
#      -> "Compilation Process Settings"
#         -> "Save project output files in specified directory"
# Now you can either place a .gitignore in the directory and allow the following
# list of types:
#   !*.sof
#   !*.pof
# or you create an own submodule in the folder to keep binary files out of your
# design.

# ignore hdl source files in top level directory
*.vhd
*.v

# ignore Quartus II generated files
*sopc_*
*.jdi
*.ptf.*
*.sof
*.pof
*.qws
*.smsg
*_inst.vhd
*_generation_script*
*.done
*.txt
*.qarlog
*.rpt
*.summary
*.qws
*.cmp
*.eqn
*.html
*.jpg
*.bak
*.qar
*.sopc_builder
*example*
*~
*.sdc
*.tcl
*.pin
*.mif
*.hex

# ignore Quartus II generated folders
db/
incremental_db/
simulation/
timing/
testbench/
*_sim/


## Redcar.gitignore
.redcar


## SASS.gitignore
### Sass Ignores - "Sassy CSS" http://sass-lang.com/
*.sass-cache


## SBT.gitignore
# SBT .gitignore
# recommended: http://code.google.com/p/simple-build-tool/wiki/Setup#Version_Control

target/
lib_managed/
src_managed/
project/boot/
.history
.cache


## SVN.gitignore
.svn/


## SublimeText.gitignore
# workspace files are user-specific
*.sublime-workspace

# project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using SublimeText
# *.sublime-project


## Tags.gitignore
# Ignore tags created by etags, ctags, gtags (GNU global) and cscope
TAGS
!TAGS/
tags
!tags/
gtags.files
GTAGS
GRTAGS
GPATH
cscope.files
cscope.out
cscope.in.out
cscope.po.out



## TextMate.gitignore
*.tmproj
*.tmproject
tmtags


## Vagrant.gitignore
.vagrant/


## VirtualEnv.gitignore
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ss]cripts


## Windows.gitignore
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp


## XilinxISE.gitignore
# intermediate build files
*.bgn
*.bit
*.bld
*.cmd_log
*.drc
*.ll
*.lso
*.msd
*.msk
*.ncd
*.ngc
*.ngd
*.ngr
*.pad
*.par
*.pcf
*.prj
*.ptwx
*.rbb
*.rbd
*.stx
*.syr
*.twr
*.twx
*.unroutes
*.ut
*.xpi
*.xst
*_bitgen.xwbt
*_envsettings.html
*_map.map
*_map.mrp
*_map.ngm
*_map.xrpt
*_ngdbuild.xrpt
*_pad.csv
*_pad.txt
*_par.xrpt
*_summary.html
*_summary.xml
*_usage.xml
*_xst.xrpt

# project-wide generated files
*.gise
par_usage_statistics.html
usage_statistics_webtalk.html
webtalk.log
webtalk_pn.xml

# generated folders
iseconfig/
xlnx_auto_0_xdb/
xst/
_ngo/
_xmsgs/


## vim.gitignore
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
.netrwhist
*~


## webMethods.gitignore
**/IntegrationServer/lib/
**/IntegrationServer/datastore/
**/IntegrationServer/db/
**/IntegrationServer/DocumentStore/
**/IntegrationServer/lib/
**/IntegrationServer/logs/
**/IntegrationServer/replicate/
**/IntegrationServer/sdk/
**/IntegrationServer/support/
**/IntegrationServer/update/
**/IntegrationServer/userFtpRoot/
**/IntegrationServer/web/
**/IntegrationServer/WmRepository4/
**/IntegrationServer/XAStore/
**/IntegrationServer/packages/Wm*/
