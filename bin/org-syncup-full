#!/usr/bin/env bash
set -e

# Save all Org mode buffers. This will minimize the chance of conflicts between
# the local version and remote version of the files.
emacsclient --eval '(org-save-all-org-buffers)'

org-bad-branch
org-git-sync
org-git-push

echo
echo '========================================'
echo '       Sync Orgzly on device now        '
echo '========================================'
echo
read -rsp $'Press any key to continue...\n' -n1 _key

home-org-sync-dropbox -n
cd ~/Documents/org/home-org
git push

google-org-sync-dropbox -n
cd ~/Documents/org/google-org
git push

echo
echo '========================================'
echo '       Sync Orgzly on device now        '
echo '========================================'
echo
read -rsp $'Press any key to continue...\n' -n1 _key

# The documentation for `org-revert-all-org-buffers' says this:
#
# This function is useful in a setup where one tracks Org files
# with a version control system, to revert on one machine after pulling
# changes from another.  I believe the procedure must be like this:
#
# 1. M-x org-save-all-org-buffers
# 2. Pull changes from the other machine, resolve conflicts
# 3. M-x org-revert-all-org-buffers
#
# However, I don't revert from this script because I use auto-revert-mode (see
# https://www.gnu.org/software/emacs/manual/html_node/emacs/Reverting.html).
# Therefore, manually triggering a revert is a waste of time. I've left the
# code in here in case I end up not using auto-revert-mode in the future.
#
# # Revert Org buffers to reload them from the file. Use `cl-letf` to disable
# # `yes-or-no-p` prompt, and disable output, which seems to print
# # `org-id-locations` for some reason, and so produces very long output.
# emacsclient --eval '
# (cl-letf (((symbol-function (quote yes-or-no-p)) (lambda (&rest args) t)))
#     (org-revert-all-org-buffers))' >/dev/null
