#!/usr/bin/env bash
set -e

options=$(getopt -o n -- "$@")
eval set -- "$options"
no_prompt=0
while true; do
    case "$1" in
    -n)
        no_prompt=1
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

# Reset terminal echo state after a `read` call
stty_echo () {
    stty echo </dev/tty &>/dev/null || true
    echo
}
trap 'stty_echo' EXIT

sync_orgzly_prompt () {
    echo
    echo '========================================'
    echo '       Sync Orgzly on device now        '
    echo '========================================'
    echo
    echo 'Press any key to continue...'
    (
        # shellcheck disable=SC2064
        trap "stty $(stty -g;stty -icanon)" EXIT
        stty -echo
        LC_ALL=C dd bs=1 count=1 >/dev/null 2>&1
    )   </dev/tty
}

# The documentation for `org-revert-all-org-buffers' says this:
#
# This function is useful in a setup where one tracks Org files
# with a version control system, to revert on one machine after pulling
# changes from another.  I believe the procedure must be like this:
#
# 1. M-x org-save-all-org-buffers
# 2. Pull changes from the other machine, resolve conflicts
# 3. M-x org-revert-all-org-buffers
#
# I've decided to start reverting from this script because I no longer use
# auto-revert-mode (see
# https://www.gnu.org/software/emacs/manual/html_node/emacs/Reverting.html).
revert_all_org_buffers () {
    # Revert Org buffers to reload them from the file. Use `cl-letf` to disable
    # `yes-or-no-p` prompt, and disable output, which seems to print
    # `org-id-locations` for some reason, and so produces very long output.
    if ! "$EMACSCLIENT" --eval '
        (cl-letf (((symbol-function (quote yes-or-no-p)) (lambda (&rest args) t)))
            (org-revert-all-org-buffers))' >/dev/null; then
        rv=$?
        echo "Failed to connect to Emacs daemon. If Emacs isn't open, run" \
            "\`emacs --daemon\` and try again. Otherwise, run M-x" \
            "server-force-delete followed by M-x server-start and try again."
        return $rv
    fi
}

options=$(getopt -o g -- "$@")
eval set -- "$options"
no_dropbox_mode=0
while true; do
    case "$1" in
    -g)
        no_dropbox_mode=1
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

# Save all Org mode buffers. This will minimize the chance of conflicts between
# the local version and remote version of the files.
EMACSCLIENT=${EMACSCLIENT:-emacsclient}
unset ALTERNATE_EDITOR  # Don't fall back to non-Emacs editor
if ! "$EMACSCLIENT" --eval '(org-save-all-org-buffers)'; then
    echo "Failed to connect to Emacs daemon. If Emacs isn't open, run" \
        "\`emacs --daemon\` and try again. Otherwise, run M-x" \
        "server-force-delete followed by M-x server-start and try again."
    exit 1
fi

org-git-sync
org-bad-branch || {
    for repo in $ORG_REPOS; do
        cd "$HOME/Documents/org/$repo"
        git md-tmp-branches || exit $?
    done
}
org-git-push

[[ "$no_dropbox_mode" -eq 1 ]] && exit 0
[[ "$no_prompt" -ne 1 ]] && sync_orgzly_prompt

home-org-sync-dropbox -n
cd ~/Documents/org/home-org
revert_all_org_buffers  # Revert after each pull.
git push

google-org-sync-dropbox -n
cd ~/Documents/org/google-org
git push

[[ "$no_prompt" -ne 1 ]] && sync_orgzly_prompt

echo "Reverting all Org buffers - may take a while..."
revert_all_org_buffers  # Revert after each pull.
command -v git-restore-mtime &>/dev/null || {
    for repo in $ORG_REPOS; do
        cd "$HOME/Documents/org/$repo"
        git-restore-mtime
    done
}
echo "Reverting complete"
#
#
