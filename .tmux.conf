## Stolen from http://mutelight.org/practical-tmux
# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=blue]#H"

# Set terminal title
set-option -g set-titles on
set-option -g set-titles-string "#h #S / #W"

# Increase size of history
set -g history-limit 10000

## Rather than constraining window size to the maximum size of any client
## connected to the *session*, constrain window size to the maximum size of any
## client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-style bg=red

## Ensure 256-color terminal
set -g default-terminal "tmux-256color"

## Vi keys
set -g status-keys vi
setw -g mode-keys vi
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe-and-cancel'

# OSC 52 configuration
# Enable OSC 52 to work in vim using https://github.com/ojroques/vim-oscyank
set -g set-clipboard on
# Force OSC 52 to work in Mosh 1.4.0, tmux 3.3a (see
# https://github.com/mobile-shell/mosh/pull/1054#issuecomment-1303725548).
set-option -ag terminal-overrides ",xterm-256color:Ms=\\E]52;c;%p2%s\\7"

# Common Linux desktop environment variables, as well as COLORFGBG, which is
# used by Vim to determine if the terminal has a light or dark background.
set -ga update-environment ' DESKTOP_SESSION DESKTOP_STARTUP_ID DBUS_SESSION_BUS_ADDRESS VIM_SERVERNAME COLORFGBG UPSTART_SESSION'

# Visual Studio Code environment variables, so you can run `code <file>` and
# have it work.
set -ga update-environment ' VSCODE_GIT_ASKPASS_NODE VSCODE_GIT_ASKPASS_EXTRA_ARGS VSCODE_GIT_IPC_HANDLE VSCODE_GIT_ASKPASS_MAIN VSCODE_IPC_HOOK_CLI'

# Variable to determine if terminal is using Mosh
set -ga update-environment ' MOSH_CONNECTION'

set -g terminal-overrides 'xterm*:Tc:smcup@:rmcup@,screen*:Tc:smcup@:rmcup@,st*:Tc:smcup@:rmcup@,putty*:smcup@:rmcup@'

set -g mouse on

# Toggle mouse on with ^B m
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'

unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

bind C-n next-window
bind C-p previous-window

# https://www.reddit.com/r/vim/comments/22ixkq/navigate_around_vim_and_tmux_panes_painlessly/cgnnnai
# cycle between panes within a workspace -- including inside vim splits
bind -n C-h run "tmux_navigate h"
bind -n C-j run "tmux_navigate j"
bind -n C-k run "tmux_navigate k"
bind -n C-l run "tmux_navigate l"
bind C-l send-keys 'C-l'

bind -n C-s swap-window -s "!"

set-option -g allow-passthrough on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
